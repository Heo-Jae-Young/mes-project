# Generated by Django 5.2.5 on 2025-09-01 05:35

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', '관리자'), ('quality_manager', '품질관리자'), ('production_manager', '생산관리자'), ('operator', '작업자'), ('auditor', '감사자')], default='operator', max_length=20)),
                ('employee_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FinishedProduct',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('shelf_life_days', models.IntegerField()),
                ('storage_temp_min', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('storage_temp_max', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('net_weight', models.DecimalField(decimal_places=3, max_digits=8)),
                ('packaging_type', models.CharField(max_length=100)),
                ('allergen_info', models.TextField(blank=True)),
                ('nutrition_facts', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_finished_products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'finished_products',
            },
        ),
        migrations.CreateModel(
            name='CCP',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('ccp_type', models.CharField(choices=[('temperature', '온도'), ('ph', 'pH'), ('time', '시간'), ('pressure', '압력'), ('visual', '육안검사'), ('metal_detection', '금속검출'), ('weight', '중량')], max_length=20)),
                ('description', models.TextField()),
                ('process_step', models.CharField(help_text='어느 공정 단계의 CCP인지', max_length=200)),
                ('critical_limit_min', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('critical_limit_max', models.DecimalField(blank=True, decimal_places=3, max_digits=10, null=True)),
                ('monitoring_frequency', models.CharField(help_text='모니터링 주기 (예: 매 30분)', max_length=100)),
                ('corrective_action', models.TextField(help_text='한계 기준 이탈 시 조치사항')),
                ('responsible_person', models.CharField(max_length=100)),
                ('monitoring_method', models.TextField()),
                ('verification_method', models.TextField()),
                ('record_keeping', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_ccps', to=settings.AUTH_USER_MODEL)),
                ('finished_product', models.ForeignKey(blank=True, help_text='특정 제품에만 적용되는 경우', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ccps', to='core.finishedproduct')),
            ],
            options={
                'verbose_name': 'Critical Control Point',
                'verbose_name_plural': 'Critical Control Points',
                'db_table': 'ccps',
            },
        ),
        migrations.CreateModel(
            name='ProductionOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(max_length=50, unique=True)),
                ('planned_quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('produced_quantity', models.IntegerField(default=0)),
                ('planned_start_date', models.DateTimeField()),
                ('planned_end_date', models.DateTimeField()),
                ('actual_start_date', models.DateTimeField(blank=True, null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('planned', '계획'), ('in_progress', '생산중'), ('completed', '완료'), ('cancelled', '취소'), ('on_hold', '보류')], default='planned', max_length=20)),
                ('priority', models.CharField(choices=[('low', '낮음'), ('normal', '보통'), ('high', '높음'), ('urgent', '긴급')], default='normal', max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_operator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_production_orders', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_production_orders', to=settings.AUTH_USER_MODEL)),
                ('finished_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='production_orders', to='core.finishedproduct')),
            ],
            options={
                'db_table': 'production_orders',
            },
        ),
        migrations.CreateModel(
            name='CCPLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('measured_value', models.DecimalField(decimal_places=3, max_digits=10)),
                ('unit', models.CharField(max_length=20)),
                ('measured_at', models.DateTimeField()),
                ('status', models.CharField(choices=[('within_limits', '기준 내'), ('out_of_limits', '기준 이탈'), ('corrective_action', '개선조치')], max_length=20)),
                ('is_within_limits', models.BooleanField()),
                ('deviation_notes', models.TextField(blank=True)),
                ('corrective_action_taken', models.TextField(blank=True)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('measurement_device', models.CharField(blank=True, max_length=100)),
                ('environmental_conditions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ccp', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='logs', to='core.ccp')),
                ('corrective_action_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='corrective_actions', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_ccp_logs', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='verified_ccp_logs', to=settings.AUTH_USER_MODEL)),
                ('production_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ccp_logs', to='core.productionorder')),
            ],
            options={
                'verbose_name': 'CCP Monitoring Log',
                'verbose_name_plural': 'CCP Monitoring Logs',
                'db_table': 'ccp_logs',
                'ordering': ['-measured_at'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('contact_person', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=20)),
                ('address', models.TextField()),
                ('certification', models.TextField(blank=True, help_text='HACCP, ISO 등 인증 정보')),
                ('status', models.CharField(choices=[('active', '활성'), ('inactive', '비활성'), ('suspended', '정지')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_suppliers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'suppliers',
            },
        ),
        migrations.CreateModel(
            name='RawMaterial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('category', models.CharField(choices=[('ingredient', '원료'), ('packaging', '포장재'), ('additive', '첨가물'), ('chemical', '화학물질')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('unit', models.CharField(default='kg', max_length=10)),
                ('storage_temp_min', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('storage_temp_max', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('shelf_life_days', models.IntegerField(blank=True, null=True)),
                ('allergens', models.TextField(blank=True, help_text='알레르기 유발 요소')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_raw_materials', to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='raw_materials', to='core.supplier')),
            ],
            options={
                'db_table': 'raw_materials',
            },
        ),
        migrations.CreateModel(
            name='MaterialLot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lot_number', models.CharField(max_length=100, unique=True)),
                ('received_date', models.DateTimeField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('quantity_received', models.DecimalField(decimal_places=3, max_digits=10)),
                ('quantity_current', models.DecimalField(decimal_places=3, max_digits=10)),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('received', '입고'), ('in_storage', '보관중'), ('in_use', '사용중'), ('used', '사용완료'), ('expired', '유통기한만료'), ('rejected', '반품')], default='received', max_length=20)),
                ('quality_test_passed', models.BooleanField(blank=True, null=True)),
                ('quality_test_date', models.DateTimeField(blank=True, null=True)),
                ('quality_test_notes', models.TextField(blank=True)),
                ('storage_location', models.CharField(blank=True, max_length=100)),
                ('temperature_at_receipt', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_material_lots', to=settings.AUTH_USER_MODEL)),
                ('raw_material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lots', to='core.rawmaterial')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='material_lots', to='core.supplier')),
            ],
            options={
                'db_table': 'material_lots',
            },
        ),
    ]
